{
  "name": "gulp-ruby-sass",
  "version": "1.0.0-alpha",
  "description": "Compile Sass to CSS with Ruby Sass",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/sindresorhus/gulp-ruby-sass"
  },
  "maintainers": [
    {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "http://sindresorhus.com"
    },
    {
      "name": "Rob Wierzbowski",
      "email": "robwierzbowski@gmail.com",
      "url": "http://robwierzbowski.com"
    }
  ],
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "gulpplugin",
    "scss",
    "sass",
    "css",
    "compile",
    "preprocessor",
    "style",
    "ruby",
    "source-map",
    "source-maps",
    "sourcemap",
    "sourcemaps"
  ],
  "dependencies": {
    "chalk": "^0.5.1",
    "convert-source-map": "^0.4.1",
    "dargs": "^2.0.3",
    "each-async": "^1.0.0",
    "escape-string-regexp": "^1.0.1",
    "glob": "^4.0.2",
    "gulp-util": "^3.0.0",
    "mkdirp": "^0.5.0",
    "object-assign": "^1.0.0",
    "rimraf": "^2.2.8",
    "slash": "^1.0.0",
    "vinyl-fs": "^0.3.7",
    "win-spawn": "^2.0.0",
    "vinyl": "^0.4.3"
  },
  "devDependencies": {
    "gulp": "^3.7.0",
    "gulp-sourcemaps": "^1.2.7",
    "mocha": "*"
  },
  "readme": "# gulp-ruby-sass [![Build Status](https://travis-ci.org/sindresorhus/gulp-ruby-sass.svg?branch=master)](https://travis-ci.org/sindresorhus/gulp-ruby-sass)\n\n> Compile Sass to CSS with [Ruby Sass](http://sass-lang.com/install)\n\nThis is slower than [gulp-sass](https://github.com/dlmanning/gulp-sass), but more stable and feature-rich.\n\n*Issues with the output should be reported on the Sass [issue tracker](https://github.com/sass/sass/issues).*\n\n\n## Install\n\n```sh\n$ npm install --save-dev gulp-ruby-sass\n```\n\nYou also need to have [Ruby](http://www.ruby-lang.org/en/downloads/) and [Sass](http://sass-lang.com/download.html) installed. If you're on OS X or Linux you probably already have Ruby; test with `ruby -v` in your terminal. When you've confirmed you have Ruby, run `gem install sass` to install Sass.\n\n\n## Usage\n\n#### gulp-ruby-sass is a gulp source adapter\n\nUse gulp-ruby-sass instead of `gulp.src` to compile a file or directory.  \n**Note:** gulp-ruby-sass doesn't support globs yet.\n\n```js\nvar gulp = require('gulp');\nvar sass = require('gulp-ruby-sass');\n\ngulp.task('sass', function() {\n\treturn sass('source/') \n\t.on('error', function (err) {\n\t  console.error('Error!', err.message);\n   })\n\t.pipe(gulp.dest('result'));\n});\n```\n\n#### Recompiling on changes\n\nUse [gulp-watch](https://github.com/gulpjs/gulp/blob/master/docs/API.md#gulpwatchglob--opts-tasks-or-gulpwatchglob--opts-cb) to automatically recompile your files on change.\n\n\n#### Handling errors\n\nHandle Sass errors with an `on('error', cb)` listener or a plugin like [plumber](https://github.com/floatdrop/gulp-plumber). gulp-ruby-sass throws errors like a gulp plugin, but streams the erroring files so you can see the errors in your browser.\n\n\n### Plugin options\n\n#### sourcemap\n\nType: `Boolean`  \nDefault: `false`  \n\nRequires Sass `>= 3.4` and [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps).  \nThis option replaces the standard Sass `--sourcemap` option.\n\n*Inline sourcemaps* are recommended, as they \"just work\".\n\n*File sourcemaps* require you to serve the sourcemap location so the browser can read the files. See the [gulp-sourcemaps readme](https://github.com/floridoo/gulp-sourcemaps) for more info.\n\n```js\n'use strict';\n\nvar gulp = require('gulp');\nvar sass = require('gulp-ruby-sass');\nvar sourcemaps = require('gulp-sourcemaps');\n\n// Inline sourcemaps\ngulp.task('sass', function() {\n\treturn sass('source', { sourcemap: true })\n\t.on('error', function (err) {\n\t  console.error('Error', err.message);\n   })\n\t.pipe(sourcemaps.write())\n\t.pipe(gulp.dest('result'));\n});\n\n// File sourcemaps\ngulp.task('sass', function() {\n\treturn sass('source', { sourcemap: true })\n\t.on('error', function (err) {\n\t  console.error('Error', err.message);\n   })\n\n\t.pipe(sourcemaps.write('maps', {\n\t\tincludeContent: false,\n\t\tsourceRoot: '/source'\n\t}))\n\n\t.pipe(gulp.dest('result'));\n});\n```\n\n#### container\n\nType: `String`  \nDefault: `gulp-ruby-sass`\n\nName of the temporary directory used to process files. If you're running multiple instances of gulp-ruby-sass at once, you need to specify a separate container for each task to avoid the results being jumbled together.\n\n```js\nvar gulp = require('gulp');\nvar sass = require('gulp-ruby-sass');\n\ngulp.task('sass-app', function() {\n\treturn sass('source', { container: 'gulp-ruby-sass-app' })\n\t.on('error', function (err) {\n\t  console.error('Error', err.message);\n   })\n\t.pipe(gulp.dest('result/app'));\n});\n\ngulp.task('sass-site', function() {\n\treturn sass('source', { container: 'gulp-ruby-sass-site' })\n\t.on('error', function (err) {\n\t  console.error('Error', err.message);\n   })\n\t.pipe(gulp.dest('result/site'));\n});\n\ngulp.task('sass', ['sass-app', 'sass-site']);\n```\n\n#### bundleExec\n\nType: `Boolean`  \nDefault: `false`\n\nRun `sass` with [bundle exec](http://gembundler.com/man/bundle-exec.1.html): `bundle exec sass`.\n\n\n### Sass options\n\nAll other options are passed directly to the Sass executable.  \nFor up-to-date options run `sass -h`. The docs below are supplied for convenience.\n\n#### trace\n\nType: `Boolean`  \nDefault: `false`\n\nShow a full traceback on error.\n\n\n#### unixNewlines\n\nType: `Boolean`  \nDefault: `false` on Windows, otherwise `true`\n\nUse Unix-style newlines in written files.\n\n\n#### check\n\nType: `Boolean`  \nDefault: `false`\n\nJust check syntax, don't evaluate.\n\n\n#### style\n\nType: `String`  \nDefault: `nested`\n\nOutput style. Can be `nested`, `compact`, `compressed`, `expanded`.\n\n\n#### precision\n\nType: `Number`  \nDefault: `3`\n\nHow many digits of precision to use when outputting decimal numbers.\n\n\n#### quiet\n\nType: `Boolean`  \nDefault: `false`\n\nSilence warnings and status messages during compilation. **NOTE:** If you set `quiet` to `true` gulp will no longer emit most Sass and Bundler errors.\n\n\n#### compass\n\nType: `Boolean`  \nDefault: `false`\n\nMake Compass imports available and load project configuration (`config.rb` located close to the `gulpfile.js`).\n\n\n#### debugInfo\n\nType: `Boolean`  \nDefault: `false`\n\nEmit output that can be used by the FireSass Firebug plugin.\n\n\n#### lineNumbers\n\nType: `Boolean`  \nDefault: `false`\n\nEmit comments in the generated CSS indicating the corresponding source line.\n\n\n#### loadPath\n\nType: `String|Array`\n\nOne or more Sass import paths, relative to the gulpfile.\n\n\n#### require\n\nType: `String|Array`\n\nRequire one or more Ruby libraries before running Sass.\n\n\n#### cacheLocation\n\nType: `String`  \nDefault: `.sass-cache`\n\nThe path to put cached Sass files.\n\n\n#### noCache\n\nType: `Boolean`  \nDefault: `false`\n\nDon't cache to sassc files.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](http://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/sindresorhus/gulp-ruby-sass/issues"
  },
  "homepage": "https://github.com/sindresorhus/gulp-ruby-sass",
  "_id": "gulp-ruby-sass@1.0.0-alpha",
  "_shasum": "eae10e3675f19a4ce5fe461d1f28df72c8f2cdb8",
  "_from": "gulp-ruby-sass@1.0.0-alpha",
  "_resolved": "https://registry.npmjs.org/gulp-ruby-sass/-/gulp-ruby-sass-1.0.0-alpha.tgz"
}
